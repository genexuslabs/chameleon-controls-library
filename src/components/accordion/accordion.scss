@import "../../common/base";
@import "../../common/icons";

@include button-reset();
@include box-sizing();

:host {
  /**
   * @prop --ch-accordion__chevron-size:
   * Specifies the box size of the chevron.
   * @default #{$default-decorative-image-size}
   */
  --ch-accordion__chevron-size: #{$default-decorative-image-size}; // TODO: rename "chevron" to "expandable-button"

  /**
   * @prop --ch-accordion__chevron-image-size:
   * Specifies the image size of the chevron.
   * @default 100%
   */
  --ch-accordion__chevron-image-size: 100%; // TODO: rename "chevron" to "expandable-button"

  /**
   * @prop --ch-accordion__chevron-color:
   * Specifies the color of the chevron.
   * @default 100%
   */
  --ch-accordion__chevron-color: currentColor; // TODO: rename "chevron" to "expandable-button"

  /**
   * @prop --ch-accordion-expand-collapse-duration
   * Specifies duration of the expand and collapse animation
   * @default 0ms
   */
  --ch-accordion-expand-collapse-duration: 0ms;

  /**
   * @prop --ch-accordion-expand-collapse-timing-function
   * Specifies timing function of the expand and collapse animation
   * @default linear
   */
  --ch-accordion-expand-collapse-timing-function: linear;

  /**
   * @prop --ch-accordion__header-image-size:
   * Specifies the box size that contains the start image of the header.
   * @default #{$default-decorative-image-size}
   */
  --ch-accordion__header-image-size: #{$default-decorative-image-size};

  /**
   * @prop --ch-accordion__header-background-image-size:
   * Specifies the size of the start image of the header.
   * @default 100%
   */
  --ch-accordion__header-background-image-size: 100%;

  /**
   * @prop --ch-accordion__header-background-image-size:
   * Specifies the start image of the header.
   * @default #{$expandable-icon}
   */
  --ch-accordion__header-background-image: #{$expandable-icon};

  --ch-accordion-grid-template-rows: 1fr;

  display: grid;
  grid-template-rows: var(--ch-accordion-grid-template-rows);
  transition: grid-template-rows var(--ch-accordion-expand-collapse-duration)
    var(--ch-accordion-expand-collapse-timing-function);

  // Avoid unnecessary click events in the Host
  pointer-events: none;
}

.panel {
  display: grid;
  grid-template-rows: max-content 0fr;
  transition: grid-template-rows var(--ch-accordion-expand-collapse-duration)
    var(--ch-accordion-expand-collapse-timing-function);

  // Restore click events
  pointer-events: all;

  &--expanded {
    grid-template-rows: max-content 1fr;
  }
}

.header {
  &::after {
    content: "";
    inline-size: var(--ch-accordion__chevron-size);
    block-size: var(--ch-accordion__chevron-size);
    background-color: var(--ch-accordion__chevron-color);

    -webkit-mask: no-repeat center / var(--ch-accordion__chevron-image-size)
      var(--ch-accordion__header-background-image);

    transition: transform var(--ch-accordion-expand-collapse-duration)
      var(--ch-accordion-expand-collapse-timing-function);
  }

  &--expand-button-start {
    &::after {
      order: -1;
    }

    &-collapsed::after {
      transform: rotate(-90deg); // TODO: Add support for RTL
    }
  }

  &--expand-button-end {
    &::after {
      margin-inline-start: auto;
    }

    &-expanded::after {
      transform: rotate(-180deg); // TODO: Add support for RTL
    }
  }
}

// - - - - - - - - - - - - - - - - - - - -
//                 Images
// - - - - - - - - - - - - - - - - - - - -
.header {
  --ch-accordion-header-start-img: var(--ch-start-img--base);

  &.start-img--hover:hover {
    --ch-accordion-header-start-img: var(--ch-start-img--hover);
  }

  &.start-img--active:active {
    --ch-accordion-header-start-img: var(--ch-start-img--active);
  }

  &.start-img--focus:focus {
    --ch-accordion-header-start-img: var(--ch-start-img--focus);
  }

  &.start-img--disabled.ch-disabled {
    --ch-accordion-header-start-img: var(--ch-start-img--disabled);
  }
}

.pseudo-img--start::before {
  content: "";
  display: block;
  inline-size: var(--ch-accordion__header-image-size);
  block-size: var(--ch-accordion__header-image-size);
  content-visibility: auto;
  contain-intrinsic-size: auto var(--ch-accordion__header-image-size);
}

// Background
.start-img-type--background::before {
  background: no-repeat center /
    var(--ch-accordion__header-background-image-size)
    var(--ch-accordion-header-start-img);
}

// Mask
.start-img-type--mask::before {
  -webkit-mask: no-repeat center /
    var(--ch-accordion__header-background-image-size)
    var(--ch-accordion-header-start-img);
  background-color: currentColor;
}

section {
  display: grid;
  overflow: hidden;

  // Delays the visibility application based on the value of var(--ch-accordion-expand-collapse-duration)
  transition: visibility var(--ch-accordion-expand-collapse-duration)
    allow-discrete;
}

// Necessary to hide the collapsed DOM and remove keyboard interactions
.section--hidden {
  visibility: hidden;
}

.sub-section {
  display: grid;
}
