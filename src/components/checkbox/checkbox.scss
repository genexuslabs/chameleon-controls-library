@import "../../common/_base";

$option-checked-background-color: var(--option-checked-color, #ffffff00);
$option-checked-border-color: var(--option-border-color, currentColor);
$option-checked-color: currentColor;
$option-checked-box-shadow: var(--option-highlight-color, currentColor);
$option-checked-box-shadow-size: min(0.15em, 2px);

$space-between-container-and-label: min(0.35em, 7px);

@include box-sizing();

:host {
  /**
   * @prop --ch-checkbox-container-size:
   * Specifies the size for the container of the `input` and `option` elements.
   * @default min(1em, 20px)
   */
  --ch-checkbox-container-size: min(1em, 20px);

  display: flex;
  align-items: center;
  align-self: stretch;

  // Remove outline of the focus state. This selector must not have higher
  // specificity, since it should be overridden by the class applied to the control
  outline: unset;

  // Avoid zooming on double tap
  touch-action: manipulation;

  // Remove text selection on double click
  user-select: none;
}

:host(.ch-checkbox--actionable) :is(.input, .label) {
  cursor: pointer;
}

.container {
  position: relative;
  inline-size: var(--ch-checkbox-container-size);
  block-size: var(--ch-checkbox-container-size);
  border: 1px solid $option-checked-border-color;
  border-radius: 18.75%;

  &--checked {
    background-color: $option-checked-background-color;
  }

  &:focus-within {
    box-shadow: 0 0 1px 1px color-mix(in srgb, currentColor 25%, transparent);
  }
}

.input {
  display: flex;
  inline-size: 100%;
  block-size: 100%;
  opacity: 0;
  margin: 0;
  padding: 0;
}

.option {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  inline-size: 50%;
  block-size: 50%;
  background-color: $option-checked-color;
  opacity: 0;
  pointer-events: none;

  &--checked {
    opacity: 1;
    -webkit-mask: url("data:image/svg+xml, <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'><path fill='currentColor' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z'/></svg>");
  }

  &--indeterminate {
    opacity: 1;
  }
}

.label {
  margin-inline-start: $space-between-container-and-label;
}
