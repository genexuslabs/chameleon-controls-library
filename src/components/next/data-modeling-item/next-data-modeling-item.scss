$separation-between-icons: 12px;

// Reset browser defaults
:where(button) {
  all: unset;
  display: inline-flex;
  cursor: pointer;
}

// // WA to add mouse pointer un gx-button
// gx-button {
//   cursor: pointer;
// }

// // WA to disable the gx-button
// .gx-disabled {
//   pointer-events: none;
// }

*,
::before,
::after {
  box-sizing: border-box;
}

// Reset browser defaults
.error-text,
.name {
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  outline: 0;
}

// WA to customize auto-fill in gx-edit
gx-edit:is(.gx-edit--auto-fill, .gx-edit--auto-fill:focus-within, .gx-edit--auto-fill:hover) {
  background-color: var(--gx-edit-auto-fill-background-color);
}

:host {
  display: grid;
}

:host(.ch-next-data-modeling--add-new-field) {
  grid-template: "name . ." min-content "field-name confirm cancel" 1fr "error-text . ." min-content / 1fr 32px 32px;
  column-gap: 8px;
}

:host(.ch-next-data-modeling--add-new-field-level-2) {
  grid-template: "sub-field name . ." min-content ". field-name confirm cancel" 1fr ". error-text . ." min-content / min-content 1fr 32px 32px;
  column-gap: 8px;
}

:host(:hover),
:host(:focus-within) {
  .button-primary {
    display: grid;

    &::before {
      content: "";
    }
  }
}

:host(.gx-disabled) {
  pointer-events: none;
}

// Accordion
.accordion:hover,
.accordion:focus-within {
  .edit-button,
  .delete-button {
    display: grid;
  }
}

.sub-field {
  grid-area: sub-field;
}

.field-name {
  grid-area: field-name;
  margin-inline-end: 8px;
}

.button-confirm {
  grid-area: confirm;
}

.button-cancel {
  grid-area: cancel;
}

.error-text {
  grid-area: error-text;
  display: flex;
  white-space: break-spaces; // Show empty spaces even when using "display: flex"
}

.header {
  display: grid;
  grid-template: "sub-field name type edit delete" 1fr / min-content min-content 1fr min-content max-content;
  align-items: center;
  width: 100%;
  margin-inline-end: $separation-between-icons;
}

// Separation between the actions and the chevron
.accordion::part(accordion__header) {
  column-gap: 24px;
}

.edit-mode {
  grid-template: "sub-field name confirm cancel" min-content "sub-field error-text-name confirm cancel" min-content / min-content 1fr 56px 32px;

  .button-confirm {
    margin-inline: 16px 8px;
  }
}

.name {
  grid-area: name;

  &-entity {
    text-decoration: underline;
  }
}

.type {
  grid-area: type;
}

.button-new-entity {
  align-items: center;
  transition: color 250ms;
}

// - - - - - - - - - - - - - - - -
//         Primary actions
// - - - - - - - - - - - - - - - -
// This class is only used to trigger an Stencil optimization by reusing DOM nodes
.optimization {
  display: contents;
}

.button-primary {
  display: none; // By default, it's hidden
  align-self: center;
  height: 20px;
  padding: 2px;

  &::before {
    display: flex;
  }
}

.button-edit {
  grid-area: edit;
  width: 21px;

  &::before {
    -webkit-mask: var(--edit-icon) no-repeat;
  }
}

.button-delete {
  grid-area: delete;
  width: 18px;
  margin-inline-start: $separation-between-icons;

  &::before {
    -webkit-mask: var(--delete-icon) no-repeat;
  }
}

// Delete mode
.delete-mode {
  grid-area: delete;
  display: grid;
  grid-template-columns: 1fr 24px 24px;
  align-items: center;
  column-gap: 8px;
  cursor: auto; // Remove "cursor: pointer" inherited from <button> tag
  animation: fade-in 250ms ease-in-out;
}

// - - - - - - - - - - - - - - - -
//          Waiting mode
// - - - - - - - - - - - - - - - -
.waiting-mode {
  grid-template-columns: 24px 1fr;
}

.waiting-mode__loading {
  order: -1;
  width: 100%;
  fill: none;
  animation: rotate 1.5s linear 0.125s infinite;
}

circle {
  stroke: currentColor;
  stroke-dasharray: 1, 200;
  stroke-linecap: round;
  animation: indeterminate-loading 1.25s ease-in-out 0.125s infinite;
}

// - - - - - - - - - - - - - - - -
//           Key frames
// - - - - - - - - - - - - - - - -
@keyframes fade-in {
  0% {
    opacity: 0;
  }
}

@keyframes rotate {
  100% {
    transform: rotate(1turn);
  }
}

@keyframes indeterminate-loading {
  50%,
  60% {
    stroke-dasharray: 20, 200;
    stroke-dashoffset: -8px;
  }
  100% {
    stroke-dashoffset: -24px;
  }
}
